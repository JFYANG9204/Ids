{
	"name": "DataCollection Script",
	"fileTypes": [
		"mdd",
		"dms",
		"mrs",
		"ini"
	],
	"patterns": [
		{
			"match": "\\n",
			"name": "meta.ending-space"
		},
		{
			"include": "#square-brackets"
		},
		{
			"include": "#curly-block"
		},
		{
			"name": "meta.leading-space",
			"begin": "^(?=\\t)",
			"end": "(?=[^\\t])",
			"patterns": [
				{
					"match": "(\\t)(\\t)?",
					"catpures": {
						"1": {
							"name": "meta.odd-tab.tabs"
						},
						"2": {
							"name": "meta.even-tab.tabs"
						}
					}
				}
			]
		},
		{
			"name": "meta.leading-space",
			"begin": "^(?= )",
			"end": "(?=[^ ])",
			"patterns": [
			  	{
					"match": "(  )(  )?",
					"captures": {
					  	"1": {
							"name": "meta.odd-tab.spaces"
					  	},
					  	"2": {
							"name": "meta.even-tab.spaces"
					  	}
					}
			  	}
			]
		},
		{
			"include": "#block-comment"
		},
		{
			"include": "#line-comment"
		},
		{
			"include": "#pre-include"
		},
		{
			"include": "#pre-macro"
		},
		{
			"include": "#pre-conditional-defined"
		},
		{
			"include": "#pre-conditional-range"
		},
		{
			"name": "storage.type.ds",
			"match": "(?i:\\s*\\b(class|const|dim|function|end\\s+function|sub|end\\s+sub|set|option\\s+explicit|namespace|end\\s+namespace|property|end\\s+property|Implements|interface|end\\s+interface)(?!\\()\\b\\s*)"
		},
		{
			"name": "keyword.control.ds",
			"match": "(?i:\\b(case|do|each|else|elseif|end|error|exit|explicit|event|for|globalvariables|goto|if|implicit|in|loop|next|null|on|option|paper|resume|section|select|step|then|to|until|while|with)(?!\\()\\b)"
		},
		{
			"include": "#member-access"
		},
		{
			"include": "#keyword-operator"
		},
		{
			"name": "variable.other.dim.ds",
			"match": "(?i:(dim)\\s*(?:(\\b[a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*\\b)\\s*(,?)))",
			"captures": {
				"1": {
					"name": "storage.type.ds"
				},
				"2": {
					"name": "variable.other.bfeac.ds"
				},
				"3": {
					"name": "meta.seperator.comma.ds"
				}
			}
		},
		{
			"name": "storage.modifier.ds",
			"match": "\\b(?i:default|readonly|writeonly)\\b"
		},
		{
			"include": "#language-constants"
		},
		{
			"name": "meta.function.ds",
			"match": "[ \\t]*((?i:default)?)\\s*((?i:function|sub))\\s*([a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*)\\s*((\\()([^)]*)*(\\)))?.*\\n",
			"captures": {
				"1": {
					"name": "storage.modifier.function.ds"
				},
				"2": {
					"name": "storage.type.function.ds"
				},
				"3": {
					"name": "entity.name.function.ds"
				},
				"5": {
					"name": "punctuation.definition.parameters.ds"
				},
				"6": {
					"name": "variable.parameter.function.ds"
				},
				"7": {
					"name": "punctuation.definition.parameters.ds"
				}
			}
		},
		{
			"name": "meta.property.ds",
			"match": "[\\s\\t]*((?:readonly|writeonly)?)\\s*((?:default)?)\\s*((?i:property))\\s*([a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*)\\s*((\\()([^)]*)*(\\)))?.*\\n",
			"captures": {
				"1": {
					"name": "storage.modifier.property.ds"
				},
				"2": {
					"name": "storage.modifier.property.ds"
				},
				"3": {
					"name": "storage.type.property.ds"
				},
				"4": {
					"name": "entity.name.property.ds"
				},
				"6": {
					"name": "punctuation.definition.parameters.ds"
				},
				"7": {
					"name": "variable.parameter.property.ds"
				},
				"8": {
					"name": "punctuation.definition.parameters.ds"
				}
			}
		},
		{
			"name": "meta.type.ds",
			"match": "^\\s*((?i:class|namespace))\\s*([a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*)\\n",
			"captures": {
				"1": {
					"name": "storage.type.ds"
				},
				"2": {
					"name": "entity.name.type.ds"
				}
			}
		},
        {
            "match": "(?i:\\b(answercount|containsall|containsallexactly|containsany|containsanyexactly|containssome|definedcategories|definedelements|definedfactors|definedlistelements|difference|factor|filterby|getanswer|hasanswer|intersection|lbound|merge|redim|ubound|union|unique|xunion|ccategorical|clong|cdouble|cboolean|cdate|ctext|find|left|right|len|mid|ascw|chrw|format|formatvalue|hex|lcase|ltrim|makemdmname|makestring|oct|rtrim|split|trim|ucase|getrandomseed|ranint|rnd|setrandomseed|finditem|getreversalseed|getrotationseed|ran|randompassword|ransequence|rot|rotsequence|selectrange|setreversalseed|setrotationseed|sortasc|sortdesc|band|bitand|bitnot|bitor|bitxor|categorize|categorizeloopvariable|createobject|dbnull|decode|engineversion|equalband|eval|evaluatederivediteration|execute|getinterface|iif|inputbox|isdbnull|iselementinversions|isempty|isequalobject|isnullobject|isoneof|isset|rgb|samplecategorize|shellexecute|sleep|validate|vartype|vartypename|abs|atn|cos|exp|int|log|maxof|minof|pow|round|sgn|sin|sqrt|tan)\\b)",
            "name": "support.function.ds"
        },
        {
            "match": "(?i:\\b((mr\\.cr)|(mr\\.crlf)|(mr\\.formfeed)|(mr\\.lf)|(mr\\.newline)|(mr\\.tab))\\b)",
            "name": "support.type.ds"
        },
		{
			"include": "#function-entity"
		},
		{
			"include": "#metadata-field"
		},
		{
			"include": "#variable"
		},
		{
			"include": "#string"
		},
		{
			"include": "#numeric"
		},
		{
			"include": "#operators"
		}
	],
	"repository": {
		"language-constants": {
			"match": "(?<!\\w)(?i:(?:false)|(?:NULL)|(?:true)|(?:nothing)|(?:const))(?!\\w)",
			"name": "constant.language.ds"
		},
		"metadata-constants": {
			"match": "(?i:AnalysisBase|AnalysisCategory|AnalysisMaximum|AnalysisMean|AnalysisMinimum|AnalysisSampleVariance|AnalysisStdDev|AnalysisStdErr|AnalysisSubHeading|AnalysisSubTotal|AnalysisSummaryData|AnalysisTotal)",
			"name": "constant.language.ds"
		},
		"empty-square-brackets": {
			"match": "\\[(?:(?:\\s)+)?\\]",
			"name": "storage.modifier.array.bracket.square.ds"
		},
		"function-entity": {
			"name": "support.function.ds",
			"match": "(?i:(\\b[a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*\\b)(?=\\(\\)?))",
			"captures": {
				"1": {
					"name": "entity.name.function.ds"
				}
			}
		},
		"keyword-operator": {
			"name": "keyword.control.ds",
			"match": "(?i:\\b(mod|and|or|xor|is|not|as|like)\\b)"
		},
		"block-comment": {
			"name": "comment.block.apostrophe.ds",
			"begin": "('\\!)",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.comment.ds"
				}
			},
			"end": "\\!'"
		},
		"line-comment": {
			"name": "comment.line.apostrophe.ds",
			"begin": "(')",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.comment.ds"
				}
			},
			"end": "(?=(\\n|%>))"
		},
		"variable": {
			"name": "variable.other.bfeac.ds",
			"match": "\\b[a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*\\b"
		},
		"metadata-keywords": {
			"name": "keyword.control.ds",
			"match": "\\b(?i:deriveelements|noderiveelements|initialanswer|defaultanswer|nocasedata|unversioned|rot|rotate|ran|randomize|rev|reverse|asc|ascending|desc|descending|fix|namespace|exclusive|nofilter|use|sublist|expand)\\b"
		},
		"string": {
			"name": "string.quoted.double.ds",
			"begin": "\"",
			"end": "\"",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.begin.ds"
				}
			},
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.end.ds"
				}
			},
			"patterns": [
				{
					"name": "constant.charater.escape.apostrophe.ds",
					"match": "\"\""
				}
			]
		},
		"numeric": {
			"name": "constant.numeric.ds",
			"match": "(?<![a-zA-Z_x7f-xff])((&(?:h|H)[0-9a-fA-F]*)|(\\d+[\\.]?\\d*))"
		},
		"operators": {
			"match": "!|%|&&|\\|\\||\\+|\\-|\\*|/|=|==|!=|>|<|>=|<=|<>"
		},
		"square-brackets": {
			"begin": "\\s*([a-zA-Z_]\\s*|(?<=[\\]\\)]))?(\\[)(?!\\])",
			"end": "\\]",
			"beginCaptures": {
				"1": {
					"name": "variable.other.object.ds"
				},
				"2": {
					"name": "punctuation.definition.begin.bracket.square"
				}
			},
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.end.bracket.square"
				}
			},
			"name": "meta.bracket.square.access.ds",
			"patterns": [
				{
					"include": "#string"
				},
				{
					"include": "#curly-block"
				},
				{
					"include": "#numeric"
				},
				{
					"include": "#operators"
				},
				{
					"include": "#member-access"
				},
				{
					"include": "#function-entity"
				}
			]
		},
		"curly-block": {
			"begin": "\\{",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.list.begin.ds"
                }
            },
			"end": "\\}",
            "endCaptures": {
                "0": {
                    "name": "punctuation.definition.list.end.ds"
                }
            },
            "name": "meta.block.ds",
			"patterns": [
				{
					"include": "#block-comment"
				},
				{
					"include": "#line-comment"
				},
				{
					"include": "#string"
				},
				{
					"include": "#numeric"
				},
				{
					"include": "#metadata-category"
				},
				{
					"include": "#variable"
				}
			]
		},
		"member-access": {
			"match": "((\\.)(?:(?:\\s)*)(\\b[a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*\\b))|((?!\\.)\\b([a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*\\b)(?:(?:\\s)*)(?=\\.))",
			"captures": {
				"2": {
					"name": "punctuation.separator.dot-access.ds"
				},
				"3": {
					"name": "variable.other.object.property.ds"
				},
				"5": {
					"name": "variable.other.object.ds"
				}
			}
		},
		"pre-include": {
			"match": "^(?:[\\t\\s]*)(#)(?:(?:\\s)+)?(\\binclude\\b)\\s+((\".*?\")|([a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*))",
			"captures": {
				"0": {
					"name": "meta.preprocessor.include.ds"
				},
				"1": {
					"name": "punctuation.definition.directive.ds"
				},
				"4": {
					"name": "string.quoted.double.ds"
				},
				"5": {
					"name": "variable.other.bfeac.ds"
				}
			}
		},
		"pre-line": {
			"begin": "^(?:[\\t\\s]*)(#)(?:(?:\\s)+)?)(\\bline\\b)",
			"end": "(\\n*)$",
			"beginCaptures": {
				"0": {
					"name": "meta.preprocessor.line.ds"
				},
				"1": {
					"name": "punctuation.definition.directive.ds"
				}
			},
			"patterns": [
				{
					"include": "#string"
				},
				{
					"include": "#numeric"
				},
				{
					"include": "$self"
				}
			]
		},
		"pre-macro": {
			"begin": "^(?:[\\s\\t]*)(#)(?:(?:\\s)+)?(\\bdefine\\b)(?:(?:\\s)+)",
			"beginCaptures": {
				"0": {
					"name": "meta.preprocessor.define.ds"
				},
				"1": {
					"name": "punctuation.definition.directive.ds"
				}
			},
			"end": "(\\n*)$",
			"patterns": [
				{
					"include": "#string"
				},
				{
					"include": "#numeric"
				},
				{
					"include": "#operators"
				},
				{
					"name": "variable.parameter.preprocessor.ds",
					"match": "\\b[a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*\\b"
				},
				{
					"name": "constant.language.ds",
					"match": "(?i:\\s*\\b(const|false|nothing|null|true)\\b)"
				}
			]
		},
		"pre-conditional-defined": {
            "begin": "((?<!\\w)defined(?!\\w))(\\()",
            "end": "\\)",
            "beginCaptures": {
				"0": {
					"name": "meta.preprocessor.defined.ds"
				},
                "1": {
                    "name": "entity.name.function.preprocessor.ds"
                },
                "2": {
                    "name": "punctuation.section.parens.control.defined.ds"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "punctuation.section.parens.control.defined.ds"
                }
            },
            "patterns": [
				{
					"include": "#variable"
				}
            ]
		},
		"pre-conditional-range": {
			"begin": "^(?:[\\t\\s]*)(#)(?:(?:\\s)+)?(\\bif\\b)(?:(?:\\s)+)",
			"beginCaptures": {
				"0": {
					"name": "meta.preprocessor.if.ds"
				},
				"1": {
					"name": "punctuation.definition.directive.ds"
				}
			},
			"end": "^(?:[\\t\\s]*)(#)(\\belse|endif\\b)",
			"endCaptures": {
				"0": {
					"name": "meta.preprocessor.if.ds"
				},
				"1": {
					"name": "punctuation.definition.directive.ds"
				}
			},
			"patterns": [
				{
					"include": "#language-constants"
				},
				{
					"include": "#keyword-operator"
				},
				{
					"include": "#pre-conditional-defined"
				},
				{
					"include": "#pre-include"
				},
				{
					"include": "#pre-macro"
				},
				{
					"include": "#variable"
				},
				{
					"include": "#function-entity"
				},
				{
					"include": "#operators"
				}
			]
		},
		"metadata-property": {
			"name": "meta.property.definition.ds",
			"begin": "[a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*",
			"beginCaptures": {
				"0": {
					"name": "meta.property.ds"
				}
			},
			"end": "(\\n*)$",
			"patterns": [
				{
					"include": "#numeric"
				},
				{
					"include": "#string"
				},
				{
					"include": "#variable"
				},
				{
					"include": "#metadata-brace-properties"
				},
				{
					"include": "#language-constants"
				}
			]
		},
		"metadata-properties": {
			"name": "meta.properties.definition.ds",
			"begin": "\\[",
			"beginCaptures": {
				"0": {
					"name": "punctuation.section.block.begin.bracket.ds"
				}
			},
			"end": "\\]",
			"endCaptures": {
				"0": {
					"name": "punctuation.section.block.end.bracket.ds"
				}
			},
			"patterns": [
				{
					"include": "#metadata-property"
				},
				{
					"include": "$self"
				}
			]
		},
		"metadata-brace": {
			"name": "meta.properties.definition.ds",
			"begin": "\\(",
			"beginCaptures": {
				"0": {
					"name": "punctuation.section.block.begin.brace.ds"
				}
			},
			"end": "\\)",
			"endCaptures": {
				"0": {
					"name": "punctuation.section.block.end.brace.ds"
				}
			},
			"patterns": [
				{
					"include": "#metadata-property"
				},
				{
					"include": "#curly-block"
				},
				{
					"include": "#string"
				},
				{
					"incldue": "#metadata-keywords"
				},
				{
					"include": "#metadata-constants"
				},
				{
					"include": "#variable"
				}
			]
		},
		"metadata-brace-properties": {
			"name": "meta.brace.properties.ds",
			"match": "(?i:(labelstyle|templates|style|expression|defaultanswer|factor|keycode|multiplier|elementtype))\\s*(\\([\\s\\S]*\\))",
			"captures": {
				"1": {
					"name": "storage.type.ds"
				},
				"2": {
					"name": "meta.brace.properties.ds",
					"patterns": [
						{
							"include": "#metadata-brace"
						}
					]
				}
			}
		},
		"metadata-field-header": {
			"name": "meta.variable.head.definition.ds",
			"begin": "[a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*",
			"beginCaptures": {
				"0": {
					"name": "meta.definition.variable.name.ds"
				}
			},
			"end": "(?i:(categorical|long|double|text|date|boolean|define|info|loop|grid|compound|block|page|db))\\s*((\\[)\\s*((?:\\d*\\.\\.\\d*)|(?:\\d+))\\s*(\\]))?",
			"endCaptures": {
				"1": {
					"name": "storage.type.ds"
				},
				"3": {
					"name": "meta.bracket.square.access.ds"
				},
				"4": {
					"name": "meta.variable.definition.range.ds"
				},
				"5": {
					"name": "meta.bracket.square.access.ds"
				}
			},
			"patterns": [
				{
					"include": "#metadata-properties"
				},
				{
					"include": "#metadata-brace-properties"
				},
				{
					"include": "#string"
				}
			]
		},
		"metadata-category": {
			"name": "meta.category.definition.ds",
			"begin": "([a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*)",
			"beginCaptures": {
				"0": {
					"name": "variable.other.enummember.ds"
				}
			},
			"end": "(\\s*(?=\\}))|,",
			"patterns": [
				{
					"include": "#string"
				},
				{
					"include": "#metadata-properties"
				},
				{
					"include": "#metadata-brace-properties"
				},
				{
					"include": "#variable"
				}
			]
		},
		"metadata-category-list": {
			"begin": "\\{",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.directive.ds"
				}
			},
			"end": "\\}(?i:(rot|rotate|ran|randomize|rev|reverse|asc|ascending|desc|descending|fix|namespace))*",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.directive.ds"
				},
				"1": {
					"name": "storage.type.ds"
				}
			},
			"patterns": [
				{
					"include": "#metadata-category"
				}
			]
		},
		"metadata-field": {
			"match": "([a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*)\\s*(?:\\s*(?:(\".*?\")|(\\[[\\s\\S]*?\\])|([a-zA-Z_x7f-xff][a-zA-Z0-9_x7f-xff]*\\s*\\([\\s\\S]*?\\)))\\s*)*\\s*((?i:categorical|text|date|long|double|boolean)?)\\s*(?:(\\[)((?:\\d+)|(?:\\d*\\.\\.\\d*))(\\]))?\\s*(\\{[\\s\\S]*?\\});",
			"name": "meta.definition.ds",
			"captures": {
				"1": {
					"name": "meta.definition.variable.name.ds"
				},
				"2": {
					"name": "string.quoted.double.ds"
				},
				"3": {
					"patterns": [
						{
							"include": "#metadata-properties"
						}
					]
				},
				"4": {
					"patterns": [
						{
							"include": "#metadata-brace-properties"
						}
					]
				},
				"5": {
					"name": "storage.type.ds"
				},
				"6": {
					"name": "meta.bracket.square.access"
				},
				"7": {
					"name": "keyword.operator.spread.ds"
				},
				"8": {
					"name": "meta.bracket.square.access"
				},
				"9": {
					"patterns": [
						{
							"include": "#curly-block"
						}
					]
				}
			}
		}
	},
	"scopeName": "source.ds"
}