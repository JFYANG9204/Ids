'!
Returns a value representing the current starting point of the random number generator for the `Rnd`, `RanInt`, and `Ran` functions.
+ `return`: *Long* - Current starting point for random number generation.

### Remarks
The current starting point for the random number generator is stored by the mrScriptBasic engine and Evaluate component and passed to the `Ran`, `RanInt`, and `Rnd` functions as hidden parameters.

### Examples
```ds
Dim seed

seed = GetRandomSeed()
```
!'
Function GetRandomSeed() As Long
End Function

'!
This function returns a random integer number. The numbers generated by this function are not true random numbers because they can be reproduced. However, the numbers generated meet general statistical standards of randomness.
+ `Seed`: *Long* - The starting point to be used for generating the random number. The default is 0.
+ `return`: *Long* - Random value >= 0 and <= 2147483647.

### Remarks
The maximum possible value, 2147483647, is 2^31 â€“ 1, because a *Long* value has 31 bits available (for non-negative numbers).
If `Seed` is supplied, it is used to reset the starting point for the random number generator, as in `SetRandomSeed`, before the random number is generated. If Seed is not supplied or has a value of 0, the function will use the starting point stored for the random number generator by the mrScriptBasic engine or Evaluate component and passed as a hidden parameter. Each time you call one of the randomization functions, the starting point stored for the random number generator is updated. This means that if you call the function repeatedly without specifying the `Seed` parameter, the sequence of results is determined by the changing value passed as a hidden parameter. Specifying the `Seed` parameter is a way of resetting this sequence.

### Examples
This mrScriptBasic example uses the `RanInt` function to populate an array with random integers.
```ds
Dim i, random[10]

For i = 0 To 9
   random[i] = RanInt()
Next
```
Here are the output values:

| Value |
| :------ |
| 1045025264 |
| 848909463 |
| 43370521 |
| 73429201 |
| 1057695229 |
| 19335566 |
| 609059656 |
| 695910923 |
| 413457467 |
| 28422312 |

!'
Function RanInt(Optional Seed As Long = 0) As Long
End Function

'!
This function returns a random decimal value. The numbers generated by this function are not true random numbers because they can be reproduced. However, the numbers generated meet general statistical standards of randomness.
+ `Seed`: *Long* - The starting point to be used for generating the random number. The default is 0.
+ `return`: *Double* - Random value >= 0 and < 1.0.

### Remarks
If `Seed` is supplied, it is used to reset the starting point for the random number generator, as in `SetRandomSeed`, before the random number is generated. If `Seed` is not supplied or has a value of 0, the function will use the starting point stored for the random number generator by the mrScriptBasic engine or Evaluate component and passed as a hidden parameter. Each time you call one of the randomization functions, the starting point stored for the random number generator is updated. This means that if you call the function repeatedly without specifying the `Seed` parameter, the sequence of results is determined by the changing value passed as a hidden parameter. Specifying the `Seed` parameter is a way of resetting this sequence.

### Examples
This mrScriptBasic example uses the `Rnd` function to populate an array with random decimal values.
```ds
Dim i, random[10]

For i = 0 To 9
   random[i] = Rnd()
Next
```
Here are the output values:

| Value |
| :------ |
| 0.9732556194067 |
| 0.790608546696603 |
| 4.03919452801347E-02 |
| 6.83862725272775E-02 |
| 0.985055443830788 |
| 1.80076491087675E-02 |
| 0.567231006920338 |
| 0.648117552511394 |
| 0.385062272660434 |
| 2.64703407883644E-02 |

!'
Function Rnd(Optional Seed As Long = 0) As Double
End Function

'!
+ `Seed`: *Long* - Optional. Starting value to use for random number generation. The default is 0.
+ `return`: *Long* - New starting value for random number generation.

### Remarks
`Seed` can be any *Long* value, positive, zero, or negative. If `Seed` is omitted, an unpredictable random value is returned. This function can therefore be used for generating true random numbers, unlike `RanInt` and `Rnd`, which return reproducible sequences of values.

### Examples
This example SQL query shows using `SetRandomSeed` with and without the `Seed` parameter.
```ds
SELECT Serial,
    SetRandomSeed() AS Seed1,
    SetRandomSeed(3) AS Seed2
FROM vdata
```
Here is the result set for the first five records. Note that each time you run this query, the results in the Seed1 column will be different because new random values are generated:

| Serial | Seed1       | Seed2  |
| :----- | :---------- | :----  |
| 1      | -1272667498 | 3  |
| 2      | 1402978284  | 3  |
| 3      | -1930756257 | 3  |
| 4      | -887407040  | 3  |
| 5      | -456506117  | 3  |

!'
Function SetRandomSeed(Optional Seed As Long = 0) As Long
End Function

