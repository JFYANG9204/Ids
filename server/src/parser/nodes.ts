
export enum SyntaxKind {
    endOfFileToken = 0,
    singleLineComment,
    multiLineComment,
    newLine,
    numericLiteral,
    stringLiteral,
    categoricalLiteral,
    openBraceToken,
    closeBraceToken,
    openParenToken,
    closeParenToken,
    openBracketToken,
    closeBracketToken,
    dotToken,
    semicolonToken,
    commaToken,
    caretToken,
    colonToken,
    lessThanToken,
    greaterThanToken,
    lessThanEqualsToken,
    greaterThanEqualsToken,
    plusToken,
    minusToken,
    asteriskToken,
    slashToken,
    equalsToken,
    // `||` `&&` 仅在预处理#if中使用
    barBarToken,
    ampersandAmpersandToken,
    identifier,
    // 关键字
    andKeyword,
    asKeyword,
    caseKeyword,
    classKeyword,
    constKeyword,
    dimKeyword,
    doKeyword,
    defaultKeyword,
    eachKeyword,
    elseKeyword,
    elseIfKeyword,
    endKeyword,
    enumKeyword,
    errorKeyword,
    exitKeyword,
    exlplicitKeyword,
    falseKeyword,
    forKeyword,
    functionKeyword,
    getKeyword,
    globalVariablesKeyword,
    gotoKeywords,
    ifKeyword,
    implementsKeyword,
    implicitKeyword,
    inKeyword,
    interfaceKeyword,
    isKeyword,
    likeKeyword,
    loopKeyword,
    modKeyword,
    namespaceKeyword,
    nextKeyword,
    notKeyword,
    nullKeyword,
    ofKeyword,
    onKeyword,
    optionKeyword,
    optionalKeyword,
    orKeyword,
    paperKeyword,
    paramArrayKeyword,
    propertyKeyword,
    resumeKeyword,
    readonlyKeyword,
    sectionKeyword,
    selectKeyword,
    setKeyword,
    stepKeyword,
    subKeyword,
    thenKeyword,
    toKeyword,
    trueKeyword,
    untilKeyword,
    whileKeyword,
    withKeyword,
    writeonlyKeyword,
    xorKeyword,
    parameter,
    propertySignature,
    methodSignature,
    getAccessor,
    setAccessor,
    bindingElement,
    variableDeclaration,
    functionDeclaration,
    classDeclaration,
    interfaceDeclaration,
    namespaceDeclaration,
    enumDeclaration,
}

export type KeywordSyntaxKind = SyntaxKind.andKeyword | SyntaxKind.asKeyword | SyntaxKind.classKeyword | SyntaxKind.caseKeyword | SyntaxKind.constKeyword | SyntaxKind.dimKeyword | SyntaxKind.doKeyword | SyntaxKind.defaultKeyword | SyntaxKind.eachKeyword | SyntaxKind.elseKeyword | SyntaxKind.elseIfKeyword | SyntaxKind.endKeyword | SyntaxKind.enumKeyword | SyntaxKind.errorKeyword | SyntaxKind.exitKeyword | SyntaxKind.exlplicitKeyword | SyntaxKind.falseKeyword | SyntaxKind.forKeyword | SyntaxKind.functionKeyword | SyntaxKind.getKeyword;

export enum NodeFlags {
    none = 0,
    dim = 1,
    identifier = 2,
    line = 3,
    expression = 4,
    statement = 5,
    numericLiteral = 6,
    stringLiteral = 7,
    booleanLiteral = 8,
    categoricalLiteral = 9
}



