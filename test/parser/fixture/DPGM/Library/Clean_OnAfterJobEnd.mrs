'*****FILE VERSION=1, DATE LAST MODIFIED=2010/09/16, KO


Dim fso,xlObj,currDurr,xlsheets,xlworkbook,newsheet,oldsheet,sumsheet, strExcel, strTemp1, strTemp2, i

set fso=createobject("Scripting.filesystemobject")
currDurr=fso.GetFolder(".")
'debug.Log(CurrDurr)
set xlObj=createobject("Excel.Application")

xlObj.visible=False
xlObj.DisplayAlerts = False

set xlWorkbook=xlObj.Workbooks.opentext(CSV_FILE,,,1,1,,,,true,,,,,,,,,)



        
        xlObj.activesheet.name = "Log"
        xlObj.activesheet.columns["A:D"].entireColumn.AutoFit()
        
        'Set xlRange = .Range["A1:" + fnConvertToLetter(iCol) + CText(iRow)]
        'xlRange.Autofilter(1,,,,True)
        xlobj.activesheet.columns["A:D"].autofilter(1,,,,True)
        xlobj.activesheet.columns["C:C"].select()
        xlObj.selection.copy()
 
    set newsheet=xlobj.activeworkbook.sheets.add()
    newsheet.name="Summary"

    newsheet.activate()
  
    newsheet.columns["A:A"].select()
    newsheet.paste()

    newsheet.Range["A1"].Select()
    xlobj.activecell.delete()

    xlObj.Application.CutCopyMode = False

    newsheet.Sort.SortFields.Clear()
    newsheet.Sort.SortFields.Add(newsheet.Range["A1:A"+ctext(newsheet.Cells.SpecialCells(11).Row)],0,2, ,0)
    With newsheet.Sort
        .SetRange(newsheet.Range["A1:A"+ctext(newsheet.Cells.SpecialCells(11).Row)])
        .Header = 0 'xlYes
        .MatchCase = False
        .Orientation = 1 'xlTopToBottom
        .SortMethod = 1 'xlPinYin
        .Apply()
    End With

    newsheet.rows["1:1"].Select()
    'xlobj.selection.insert()
    
    'need to insert a header row otherwise subtotal count will be off by one for one entry
    'newsheet.Range["A1"].Select()
    newsheet.rows["1:1"].Select()
    xlObj.Selection.EntireRow.Insert()
    newsheet.Range["A1"].Select()
    xlobj.activecell="ERRORS"
   'newsheet.columns["A:A"].SelectRange()
     	newsheet.columns["A:A"].Select()
    
    if newsheet.Cells.SpecialCells(11).Row <> 2 then
        'only do this if there were errors
    
                xlobj.selection.subtotal(1,-4112,1)
        
                xlObj.ActiveSheet.Outline.ShowLevels(2)
                newsheet.columns["A:B"].SpecialCells(12).Select()
        xlobj.Selection.Copy()
        end if
        
        set sumsheet=xlobj.activeworkbook.sheets.add()
        sumsheet.name="Summary of exceptions"
        sumsheet.activate()
        
        if newsheet.Cells.SpecialCells(11).Row <> 2 then
        
                sumsheet.range["A1"].Select()
                xlobj.selection.pastespecial(-4163,-4142)
        
                sumsheet.Sort.SortFields.Clear()
        sumsheet.Sort.SortFields.Add(sumsheet.Range["B1:B"+ctext(sumsheet.Cells.SpecialCells(11).Row)],0,2, ,0)
        With sumsheet.Sort
                .SetRange(sumsheet.Range["A1:B"+ctext(sumsheet.Cells.SpecialCells(11).Row)])
                .Header = 0 'xlYes
                .MatchCase = False
                .Orientation = 1 'xlTopToBottom
                .SortMethod = 1 'xlPinYin
                .Apply()
        End With
        end if 


        i = 2
        do while sumsheet.cells[i][1] <> ""
                if sumsheet.cells[i][1] = "Grand Count" then
                        sumsheet.cells[i][1] = "Total Number Of Errors"
                        if  i <> 2 then
                                'put the grand count back at the top of the list if there was only one entry and 
                                'the sort put the 
                                strTemp1 = sumsheet.cells[2][1]
                                strTemp2 = sumsheet.cells[2][2] 
                                sumsheet.cells[2][1] = sumsheet.cells[i][1]
                                sumsheet.cells[2][2] = sumsheet.cells[i][2]
                                sumsheet.cells[i][1] = strTemp1
                                sumsheet.cells[i][2] = strTemp2
                        end if
                else
                        sumsheet.cells[i][1] = left(sumsheet.cells[i][1],len(sumsheet.cells[i][1]) -6)
                end if
                i = i + 1

        loop
        
'       if sumsheet.cells[2][1] = "Grand" then
'               sumsheet.Rows["2:2"].Select()
'               xlobj.selection.delete()
'       elseif sumsheet.cells[3][1] = "Grand" then
'               sumsheet.Rows["3:3"].Select()
'               xlobj.selection.delete()
'               
'       end if
    
    
    sumsheet.Range["A1"].Select()
    xlobj.activecell="Message"

    sumsheet.Range["B1"].Select()
    xlobj.activecell="Count"
        
        sumsheet.columns["A:A"].entireColumn.AutoFit()
        
        'insert blank rows to hold details of this run - directory, mdd location, data location
        sumsheet.rows["1:1"].Select()
    xlObj.Selection.EntireRow.Insert()
    sumsheet.rows["1:1"].Select()
    xlObj.Selection.EntireRow.Insert()
    sumsheet.rows["1:1"].Select()
    xlObj.Selection.EntireRow.Insert()
    sumsheet.rows["1:1"].Select()
    xlObj.Selection.EntireRow.Insert()
    sumsheet.rows["1:1"].Select()
    xlObj.Selection.EntireRow.Insert()
    
    sumsheet.Range["A1"].Select()
    xlobj.activecell="Current Directory:  " + currdurr
    sumsheet.Range["A2"].Select()
    'xlobj.activecell="Metadata Location:  " + dmgrjob.tabledocuments["myinputdatasource"].dataset.metadatalocation
    xlobj.activecell="Metadata Location:  data\" + INPUT_METADATA + ".mdd"
    sumsheet.Range["A3"].Select()
    'xlobj.activecell="Data Location:  " + dmgrjob.tabledocuments["myinputdatasource"].dataset.dblocation
        xlobj.activecell="Data Location:  data\" + INPUT_METADATA + ".ddf"
        'delete the intermediate sheet used for the subtotal
    xlobj.activeworkbook.sheets["Summary"].Delete()
    
    xlobj.activeworkbook.saveas(EXCEL_FILE,51)
    xlobj.activeworkbook.save()
    xlobj.activeworkbook.close()
    xlObj.quit()
    
'    
