
Namespace TOMLib

    '!
    ```ds
    (interface) IAnnotations
    ```
    -----------------------------
    A collection of `Annotation` objects. An `Annotation` is a piece of text that gives information about the table. The text is dynamically generated by the Annotation object and is intended to be used when exporting the table.

    ### Remarks
    The `Annotations` collection always contains 8 `Annotation` objects. Each of these represents a position around the outside of the table (title, left, right, and center for both the header and footer). Each position accepts free-formatted text and information about the table is inserted into this text using macros. When required the macros are expanded per table to the full text string for display. Formatting information can be included in the text using a subset of the Hyper Text Markup Language (HTML). See the IAnnotation object for more information.
    !'
    Interface IAnnotations Implements IEnumerable, Object

        '!
        ```ds
        (property) IAnnotations.Count: Long
        ```
        -----------------------------
        The number of `Annotation` objects in the collection.
        !'
        ReadOnly Property Conut() As Long

        '!
        ```ds
        (property) IAnnotations.Item[Index: Variant]: IAnnotation
        ```
        -----------------------------
        Returns the specified `Annotation` object in the collection.
        !'
        ReadOnly Property Item(Index As Variant) As IAnnotation

        '!
        ```ds
        (property) IAnnotations.Parent: Variant
        ```
        -----------------------------
        The parent object

        ### Remarks
        The `Parent` property of the `Annotations` object will return either a `Table`, `TableDefaults`, or `TableGlobals` object.
        !'
        ReadOnly Property Parent() As Variant

        '!
        ```ds
        (method) IAnnotations.ClearAll(): Void
        ```
        -----------------------------
        Clears the `Specification` property of all `Annotation` objects in the collection
        !'
        Sub ClearAll()
        End Sub

    End Interface

End Namespace
